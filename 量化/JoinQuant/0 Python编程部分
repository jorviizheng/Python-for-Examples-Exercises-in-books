abs(-100)

def my_abs(x):
	if x>=0:
		return x
	else:
		return -x
my_abs(100)

def power(x):
	return x*x
power(5)

def power1(x,n=2):
	s=1
	while n > 0:
		n = n-1
		s = s*x
	return s
power1(5)


def calc1(numbers):
	sum = 0
	for n in numbers:
		sum = sum + n * n
	return sum
calc1([1,2,3])

#def calc(*numbers):
#	sum = ()
#	for n in numbers:
#		sum = sum + n * n
#	return sum
#nums = [1,2,3]
#calc(*nums)

def person(name,age,**kw):
	return 'name',name,'age',age,'other',kw
person('Win7',30)
person('Win10',45,gender='M',job='Engineer')

def func(a,b,c=0,*args,**kw):
	return 'a=',a, 'b=', b, 'c=',c, 'args = ',args, 'kw=',kw
func(1,2,3,'a','b',x=99)


x=88
def func():
	global x
	x = 99

import time
start = time.clock()
fib=lambda n,x=0,y=1:x if not n else fib(n-1,y,x+y)
#print fib(20)
end = time.clock()
#print "read: %f s" % (end - start)


def intersect(s1,s2):
    return [x for x in s1 if x in s2]
intersect([1,2,3],(1,4))

def fib(num):
    result=[0,1]
    for i in range(num-2):
        result.append(result[-2]+result[-1])
    return result
fib(15)
#[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377]


import time
start = time.clock()
def fib(n):
    if n<=2:return 1
    else:
        return fib(n-1)+fib(n-2)
fib(20)
end = time.clock()
#print "read: %f s" % (end - start)
#6765
#read: 0.005082 s

import datetime
i = datetime.datetime.now()
print i
print i.year
print ("dd/mm/yyyy %s/%s/%s" % (i.day, i.month, i.year) )
print ("hh/mm/ss %s:%s:%s" % (i.hour, i.minute, i.second) )

import time
print (time.strftime("%H:%M:%S"))
print (time.strftime("%d/%m/%Y"))



import datetime
#获得当前时间
now = datetime.datetime.now() # ->这是时间数组格式
print now
#转换为指定的格式:
otherStyleTime = now.strftime("%Y-%m-%d %H:%M:%S")
print otherStyleTime
print now.strftime("%Y-%m-%d")

a = "2013-10-10 23:40:00"
timeArray = time.strptime(a, "%Y-%m-%d %H:%M:%S")
otherStyleTime = time.strftime("%Y/%m/%d %H:%M:%S", timeArray)
otherStyleTime

# 三天前的时间
threeDayAgo = (datetime.datetime.now() - datetime.timedelta(days = 3))
# 昨天的时间
yesterday = (datetime.datetime.now() - datetime.timedelta(days=1))
# 明天
yesterday = (datetime.datetime.now() + datetime.timedelta(days=1))
print ("%s/%s/%s" % (yesterday.year, yesterday.month, yesterday.day) )


x = 'spam'
for i in range(len(x)):
	print "i = %s" %i
	print (x[i])

S = 'abcdefghijk'
for i in range(0,len(S),2):
    print S[i]

squares = [x**2 for x in range(10)]
squares

x = [(x, y) for x in [1,2,3] for y in [3,1,4] if x != y]
combs = []
for x in [1,2,3]:
    for y in [3,1,4]:
         if x != y:   
            combs.append((x, y))
combs
#[(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)]

vec = [-4,2,0,2,4]
[x*2 for x in vec]
[(x, x**2) for x in range(6)]
vec = [[1,2,3], [4,5,6], [7,8,9]]
[num for elem in vec for num in elem]


matrix = [
     [1, 2, 3, 4,5],
     [5, 6, 7, 8,5],
     [9, 10, 11, 12,5],
 ]
print [[row[i] for row in matrix] for i in range(len(matrix[0])) ]

print "-------------"

transposed = []
for i in range(4):
    transposed.append([row[i] for row in matrix])
print transposed

# 
# Day 2  Numpy库
# 同种元素的多维数组
# 注意1：	([]) ,小括号中+中括号
from numpy import *

a = arange(15).reshape(3,5)
a.shape

# 必须 ([]),小括号中+中括号
a = array([2,3,4])
type(a)
a.dtype 	#int
b = array([1.2,3.5,5.1])
b.dtype 	#float64

# 二位数组 ([ (),() ])
array([(1,5,2,3),(4,5,6)])

# 预设 1 个 3行4列 的数组，用zero填满
zeros((3,4))

# 预设 [2] 个 3行4列 的数组，用one填满
ones((2,3,4))

empty((2,3))

arange(10,30,5)
#array([10, 15, 20, 25])

#打印数组
# 0-11,通过4行3列打印出来；
arange(12).reshape(4,3)

# 0-23,用2个4行3列打印
arange(24).reshape(2,4,3)
# 如果打印 0 - 99999 会怎么办？大数据情况下如何打印










